// Code generated by MockGen. DO NOT EDIT.
// Source: ../ports/sales_storage.go

// Package services is a generated GoMock package.
package services

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	decimal "github.com/shopspring/decimal"
	domain "go.dataflow.ru/service-sales/internal/app/domain"
)

// MockSalesStorage is a mock of SalesStorage interface.
type MockSalesStorage struct {
	ctrl     *gomock.Controller
	recorder *MockSalesStorageMockRecorder
}

// MockSalesStorageMockRecorder is the mock recorder for MockSalesStorage.
type MockSalesStorageMockRecorder struct {
	mock *MockSalesStorage
}

// NewMockSalesStorage creates a new mock instance.
func NewMockSalesStorage(ctrl *gomock.Controller) *MockSalesStorage {
	mock := &MockSalesStorage{ctrl: ctrl}
	mock.recorder = &MockSalesStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSalesStorage) EXPECT() *MockSalesStorageMockRecorder {
	return m.recorder
}

// AddSale mocks base method.
func (m *MockSalesStorage) AddSale(sale *domain.Sale) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddSale", sale)
}

// AddSale indicates an expected call of AddSale.
func (mr *MockSalesStorageMockRecorder) AddSale(sale interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddSale", reflect.TypeOf((*MockSalesStorage)(nil).AddSale), sale)
}

// GetSales mocks base method.
func (m *MockSalesStorage) GetSales() []*domain.Sale {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSales")
	ret0, _ := ret[0].([]*domain.Sale)
	return ret0
}

// GetSales indicates an expected call of GetSales.
func (mr *MockSalesStorageMockRecorder) GetSales() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSales", reflect.TypeOf((*MockSalesStorage)(nil).GetSales))
}

// GetTotalSum mocks base method.
func (m *MockSalesStorage) GetTotalSum(storeID string, startDate, endDate time.Time) decimal.Decimal {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTotalSum", storeID, startDate, endDate)
	ret0, _ := ret[0].(decimal.Decimal)
	return ret0
}

// GetTotalSum indicates an expected call of GetTotalSum.
func (mr *MockSalesStorageMockRecorder) GetTotalSum(storeID, startDate, endDate interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTotalSum", reflect.TypeOf((*MockSalesStorage)(nil).GetTotalSum), storeID, startDate, endDate)
}
